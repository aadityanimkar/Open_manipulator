#!/usr/bin/env python3

import rospy
from std_msgs.msg import Float64
import time

def publish_to_topic(pub, value, duration=1.0):
    """
    Publishes a value to a specified topic and holds the position.

    :param pub: ROS publisher
    :param value: Value to publish
    :param duration: Duration to hold the position (in seconds)
    """
    pub.publish(value)
    rospy.loginfo("Publishing: %s", value)
    rospy.sleep(duration)  # Hold the position for a while

def move_to_position(joint_pubs, joint_angles, gripper_pub, gripper_pos, gripper_sub_pub=None, gripper_sub_pos=None):
    """
    Moves the robot to a specified joint angle position and controls the gripper.

    :param joint_pubs: List of publishers for each joint
    :param joint_angles: List of target joint angles
    :param gripper_pub: Publisher for the gripper
    :param gripper_pos: Target gripper position
    :param gripper_sub_pub: Publisher for the secondary gripper (if any)
    :param gripper_sub_pos: Target secondary gripper position
    """
    # Publish joint angles
    for pub, angle in zip(joint_pubs, joint_angles):
        publish_to_topic(pub, angle, duration=2.0)  # Move and hold for 2 seconds

    # Control the gripper
    publish_to_topic(gripper_pub, gripper_pos, duration=2.0)

    if gripper_sub_pub and gripper_sub_pos is not None:
        publish_to_topic(gripper_sub_pub, gripper_sub_pos, duration=2.0)

def main():
    rospy.init_node('manipulator_sequence')

    # Publishers for each joint and gripper topic
    gripper_pub = rospy.Publisher('/gripper_position/command', Float64, queue_size=10)
    gripper_sub_pub = rospy.Publisher('/gripper_sub_position/command', Float64, queue_size=10)
    joint1_pub = rospy.Publisher('/joint1_position/command', Float64, queue_size=10)
    joint2_pub = rospy.Publisher('/joint2_position/command', Float64, queue_size=10)
    joint3_pub = rospy.Publisher('/joint3_position/command', Float64, queue_size=10)
    joint4_pub = rospy.Publisher('/joint4_position/command', Float64, queue_size=10)
   
    # Ensure all publishers are set up
    rospy.sleep(1)

    # Step 1: Move to Initial Location
    joint_angles_initial = [0.707, -0.06289, 0.4279, 1.01396]  # Example angles for pick-up
    gripper_pos_initial = -0.004
    gripper_sub_pos_initial = 0.0

    move_to_position([joint1_pub, joint2_pub, joint3_pub, joint4_pub],
                     joint_angles_initial,
                     gripper_pub,
                     gripper_pos_initial,
                     gripper_sub_pub,
                     gripper_sub_pos_initial)

    # Step 2: Close the Gripper
    gripper_pos_closed = 0.01
    gripper_sub_pos_closed = 0.01

    publish_to_topic(gripper_pub, gripper_pos_closed, duration=2.0)
    publish_to_topic(gripper_sub_pub, gripper_sub_pos_closed, duration=2.0)

    # Step 3: Move to Another Location
    joint_angles_new = [-0.5353, 0.016873, 0.323, 1.11]  # Example angles for new location

    move_to_position([joint1_pub, joint2_pub, joint3_pub, joint4_pub],
                     joint_angles_new,
                     gripper_pub,
                     gripper_pos_closed,
                     gripper_sub_pub,
                     gripper_sub_pos_closed)

    # Step 4: Release the Gripper
    gripper_pos_open = -0.0035
    gripper_sub_pos_open = 0.1

    publish_to_topic(gripper_pub, gripper_pos_open, duration=2.0)
    publish_to_topic(gripper_sub_pub, gripper_sub_pos_open, duration=2.0)

if __name__ == '__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        pass
